// REESCREVA O ARQUIVO COMPLETO: js/functions/authVigia.js

// Importa a inst√¢ncia do Supabase para verificar a sess√£o do admin
import { supabase } from '../supabaseClient.js';

// Fun√ß√£o auto-execut√°vel para n√£o poluir o escopo global
(async () => {
    console.log("VIGIA 3.0: Verificando status da loja PRIMEIRO... üö¶");

    // ===================================================================
    // Passo 1: A loja est√° em dia? Essa √© a √öNICA pergunta que importa no come√ßo.
    // ===================================================================

    // Pega a URL base do N8N direto do config.js que j√° deve estar carregado
    const N8N_BASE_URL = window.N8N_CONFIG?.get_loja_config.split('loja/config/obter')[0];

    if (!N8N_BASE_URL) {
        console.error("VIGIA 3.0: Configura√ß√£o do N8N n√£o encontrada. Abortando verifica√ß√£o.");
        return;
    }

    const endpoint = N8N_BASE_URL + 'loja/config/obter';

    try {
        const response = await fetch(endpoint);
        if (!response.ok) throw new Error('Falha na comunica√ß√£o com o servidor.');

        const configs = await response.json();
        
        if (configs && configs.length > 0) {
            // Usando a coluna 'cliente_ativo' para verificar a adimpl√™ncia.
            // Certifique-se que este campo existe na sua tabela loja_config.
            const { cliente_ativo } = configs[0];

            // A REGRA MESTRA: Se o cliente est√° INATIVO, bloqueio GERAL e IMEDIATO.
            if (cliente_ativo === false) {
                console.log("VIGIA 3.0: Loja com status INATIVO. Bloqueio geral ativado! üõë");
                
                // Redireciona para a p√°gina de bloqueio
                if (!window.location.pathname.endsWith('bloqueado.html')) {
                    // Limpa qualquer sess√£o de admin para for√ßar o logout
                    await supabase.auth.signOut(); 
                    window.location.replace('bloqueado.html');
                }
                
                // PARA a execu√ß√£o aqui. Nada mais importa.
                return; 
            }
            
            // Se chegou at√© aqui, significa que cliente_ativo √© TRUE.
            console.log("VIGIA 3.0: Loja ATIVA. Acesso permitido. ‚úÖ");
            // A vida segue. O script termina e a p√°gina carrega normalmente
            // para qualquer pessoa (admin ou cliente final).

        } else {
            // Se n√£o encontrar configs, √© um problema s√©rio. 
            // Por seguran√ßa, vamos tratar como inativo.
            throw new Error("Configura√ß√µes da loja n√£o encontradas no banco de dados.");
        }
    } catch (error) {
        console.error("VIGIA 3.0: Erro cr√≠tico ao verificar status da loja. Acionando bloqueio de seguran√ßa.", error);
        
        // Em caso de qualquer erro de comunica√ß√£o ou de dados, a regra mais segura
        // √© bloquear o acesso para evitar exposi√ß√£o indevida.
        if (!window.location.pathname.endsWith('bloqueado.html')) {
            await supabase.auth.signOut();
            window.location.replace('bloqueado.html');
        }
    }
})();